{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://triipkood/./src/components/global/my-component/my-component.riot","webpack://triipkood/./src/components/global/sidebar/sidebar.riot","webpack://triipkood/./src/components/includes/user/user.riot","webpack://triipkood/./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js","webpack://triipkood/./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js","webpack://triipkood/./src/style.css?e320","webpack://triipkood/./src/components/global/ sync [a-zA-Z0-9-]+\\.riot","webpack://triipkood/./node_modules/riot/esm/api/__.js","webpack://triipkood/./node_modules/@riotjs/hot-reload/index.js","webpack://triipkood/./node_modules/riot/esm/api/component.js","webpack://triipkood/./node_modules/riot/esm/dependencies/cumpa/index.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/functions.js","webpack://triipkood/./node_modules/riot/esm/core/mocked-template-interface.js","webpack://triipkood/./node_modules/riot/esm/core/pure-component-api.js","webpack://triipkood/./node_modules/riot/esm/core/bind-dom-node-to-component-instance.js","webpack://triipkood/./node_modules/riot/esm/core/create-core-api-methods.js","webpack://triipkood/./node_modules/riot/esm/core/component-dom-selectors.js","webpack://triipkood/./node_modules/riot/esm/core/component-lifecycle-methods.js","webpack://triipkood/./node_modules/riot/esm/dependencies/curri/index.js","webpack://triipkood/./node_modules/riot/esm/core/compute-component-state.js","webpack://triipkood/./node_modules/riot/esm/core/compute-initial-props.js","webpack://triipkood/./node_modules/riot/esm/utils/get-root-computed-attribute-names.js","webpack://triipkood/./node_modules/riot/esm/core/manage-component-lifecycle.js","webpack://triipkood/./node_modules/riot/esm/core/run-plugins.js","webpack://triipkood/./node_modules/riot/esm/core/create-attribute-bindings.js","webpack://triipkood/./node_modules/riot/esm/core/add-css-hook.js","webpack://triipkood/./node_modules/riot/esm/core/instantiate-component.js","webpack://triipkood/./node_modules/riot/esm/core/create-component-from-wrapper.js","webpack://triipkood/./node_modules/riot/esm/core/component-template-factory.js","webpack://triipkood/./node_modules/riot/esm/core/create-pure-component.js","webpack://triipkood/./node_modules/riot/esm/core/css-manager.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/dom-bindings/dist/dom-bindings.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/binding-types.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/checks.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/constants.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/dom.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/expression-types.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/misc.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/objects.js","webpack://triipkood/./node_modules/riot/esm/dependencies/@riotjs/util/strings.js","webpack://triipkood/./node_modules/riot/esm/dependencies/bianco.attr/index.next.js","webpack://triipkood/./node_modules/riot/esm/dependencies/bianco.dom-to-array/index.next.js","webpack://triipkood/./node_modules/riot/esm/dependencies/bianco.query/index.next.js","webpack://triipkood/./node_modules/riot/esm/utils/dom.js","webpack://triipkood/./src/register-global-components.js","webpack://triipkood/./node_modules/riot/esm/api/register.js","webpack://triipkood/./node_modules/riot/esm/api/mount.js","webpack://triipkood/./src/index.js","webpack://triipkood/./node_modules/riot/esm/core/mount-component.js"],"sourcesContent":["<my-component>\n  <p>{ props.message }</p>\n</my-component>\n","<sidebar>\n  <div>\n    <div class=\"row\">\n      <h1>Sidebar</h1>\n    </div>\n    <div if={state.showUser} class=\"row\">\n      <user name={ state.name }/>\n    </div>\n\n    <div class=\"row\">\n      <button onclick={toggleUser}>Toggle username</button>\n    </div>\n  </div>\n\n  <script>\n    import User from '../../includes/user/user.riot'\n\n    export default {\n      components: {\n        User\n      },\n      state: {\n        name: 'John',\n        showUser: false\n      },\n      toggleUser() {\n        this.update({\n          showUser: !this.state.showUser\n        })\n      }\n    }\n  </script>\n</sidebar>","<user>\n  <p>My username is: <b>{ props.name }</b></p>\n</user>","\"use strict\";\n\n/* eslint-env browser */\n/*\n  eslint-disable\n  no-console,\n  func-names\n*/\n\n/** @typedef {any} TODO */\n\nvar normalizeUrl = require(\"./normalize-url\");\nvar srcByModuleId = Object.create(null);\nvar noDocument = typeof document === \"undefined\";\nvar forEach = Array.prototype.forEach;\n\n/**\n * @param {function} fn\n * @param {number} time\n * @returns {(function(): void)|*}\n */\nfunction debounce(fn, time) {\n  var timeout = 0;\n  return function () {\n    // @ts-ignore\n    var self = this;\n    // eslint-disable-next-line prefer-rest-params\n    var args = arguments;\n    var functionCall = function functionCall() {\n      return fn.apply(self, args);\n    };\n    clearTimeout(timeout);\n\n    // @ts-ignore\n    timeout = setTimeout(functionCall, time);\n  };\n}\nfunction noop() {}\n\n/**\n * @param {TODO} moduleId\n * @returns {TODO}\n */\nfunction getCurrentScriptUrl(moduleId) {\n  var src = srcByModuleId[moduleId];\n  if (!src) {\n    if (document.currentScript) {\n      src = ( /** @type {HTMLScriptElement} */document.currentScript).src;\n    } else {\n      var scripts = document.getElementsByTagName(\"script\");\n      var lastScriptTag = scripts[scripts.length - 1];\n      if (lastScriptTag) {\n        src = lastScriptTag.src;\n      }\n    }\n    srcByModuleId[moduleId] = src;\n  }\n\n  /**\n   * @param {string} fileMap\n   * @returns {null | string[]}\n   */\n  return function (fileMap) {\n    if (!src) {\n      return null;\n    }\n    var splitResult = src.split(/([^\\\\/]+)\\.js$/);\n    var filename = splitResult && splitResult[1];\n    if (!filename) {\n      return [src.replace(\".js\", \".css\")];\n    }\n    if (!fileMap) {\n      return [src.replace(\".js\", \".css\")];\n    }\n    return fileMap.split(\",\").map(function (mapRule) {\n      var reg = new RegExp(\"\".concat(filename, \"\\\\.js$\"), \"g\");\n      return normalizeUrl(src.replace(reg, \"\".concat(mapRule.replace(/{fileName}/g, filename), \".css\")));\n    });\n  };\n}\n\n/**\n * @param {TODO} el\n * @param {string} [url]\n */\nfunction updateCss(el, url) {\n  if (!url) {\n    if (!el.href) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    url = el.href.split(\"?\")[0];\n  }\n  if (!isUrlRequest( /** @type {string} */url)) {\n    return;\n  }\n  if (el.isLoaded === false) {\n    // We seem to be about to replace a css link that hasn't loaded yet.\n    // We're probably changing the same file more than once.\n    return;\n  }\n  if (!url || !(url.indexOf(\".css\") > -1)) {\n    return;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  el.visited = true;\n  var newEl = el.cloneNode();\n  newEl.isLoaded = false;\n  newEl.addEventListener(\"load\", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.addEventListener(\"error\", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.href = \"\".concat(url, \"?\").concat(Date.now());\n  if (el.nextSibling) {\n    el.parentNode.insertBefore(newEl, el.nextSibling);\n  } else {\n    el.parentNode.appendChild(newEl);\n  }\n}\n\n/**\n * @param {string} href\n * @param {TODO} src\n * @returns {TODO}\n */\nfunction getReloadUrl(href, src) {\n  var ret;\n\n  // eslint-disable-next-line no-param-reassign\n  href = normalizeUrl(href);\n  src.some(\n  /**\n   * @param {string} url\n   */\n  // eslint-disable-next-line array-callback-return\n  function (url) {\n    if (href.indexOf(src) > -1) {\n      ret = url;\n    }\n  });\n  return ret;\n}\n\n/**\n * @param {string} [src]\n * @returns {boolean}\n */\nfunction reloadStyle(src) {\n  if (!src) {\n    return false;\n  }\n  var elements = document.querySelectorAll(\"link\");\n  var loaded = false;\n  forEach.call(elements, function (el) {\n    if (!el.href) {\n      return;\n    }\n    var url = getReloadUrl(el.href, src);\n    if (!isUrlRequest(url)) {\n      return;\n    }\n    if (el.visited === true) {\n      return;\n    }\n    if (url) {\n      updateCss(el, url);\n      loaded = true;\n    }\n  });\n  return loaded;\n}\nfunction reloadAll() {\n  var elements = document.querySelectorAll(\"link\");\n  forEach.call(elements, function (el) {\n    if (el.visited === true) {\n      return;\n    }\n    updateCss(el);\n  });\n}\n\n/**\n * @param {string} url\n * @returns {boolean}\n */\nfunction isUrlRequest(url) {\n  // An URL is not an request if\n\n  // It is not http or https\n  if (!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url)) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {TODO} moduleId\n * @param {TODO} options\n * @returns {TODO}\n */\nmodule.exports = function (moduleId, options) {\n  if (noDocument) {\n    console.log(\"no window.document found, will not HMR CSS\");\n    return noop;\n  }\n  var getScriptSrc = getCurrentScriptUrl(moduleId);\n  function update() {\n    var src = getScriptSrc(options.filename);\n    var reloaded = reloadStyle(src);\n    if (options.locals) {\n      console.log(\"[HMR] Detected local css modules. Reload all css\");\n      reloadAll();\n      return;\n    }\n    if (reloaded) {\n      console.log(\"[HMR] css reload %s\", src.join(\" \"));\n    } else {\n      console.log(\"[HMR] Reload all css\");\n      reloadAll();\n    }\n  }\n  return debounce(update, 50);\n};","\"use strict\";\n\n/* eslint-disable */\n\n/**\n * @param {string[]} pathComponents\n * @returns {string}\n */\nfunction normalizeUrl(pathComponents) {\n  return pathComponents.reduce(function (accumulator, item) {\n    switch (item) {\n      case \"..\":\n        accumulator.pop();\n        break;\n      case \".\":\n        break;\n      default:\n        accumulator.push(item);\n    }\n    return accumulator;\n  }, /** @type {string[]} */[]).join(\"/\");\n}\n\n/**\n * @param {string} urlString\n * @returns {string}\n */\nmodule.exports = function (urlString) {\n  urlString = urlString.trim();\n  if (/^data:/i.test(urlString)) {\n    return urlString;\n  }\n  var protocol = urlString.indexOf(\"//\") !== -1 ? urlString.split(\"//\")[0] + \"//\" : \"\";\n  var components = urlString.replace(new RegExp(protocol, \"i\"), \"\").split(\"/\");\n  var host = components[0].toLowerCase().replace(/\\.$/, \"\");\n  components[0] = \"\";\n  var path = normalizeUrl(components);\n  return protocol + host + path;\n};","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      (function() {\n        var localsJsonString = undefined;\n        // 1734538215016\n        var cssReload = require(\"../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  ","var map = {\n\t\"./my-component/my-component.riot\": 364,\n\t\"./sidebar/sidebar.riot\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 131;","/* Riot v9.4.4, @license MIT */\nimport bindingTypes from '../dependencies/@riotjs/util/binding-types.js';\nimport { PROPS_KEY, STATE_KEY, IS_COMPONENT_UPDATING, ATTRIBUTES_KEY_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP, PLUGINS_SET, DOM_COMPONENT_INSTANCE_PROPERTY, PARENT_KEY_SYMBOL } from '../dependencies/@riotjs/util/constants.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport { template as create, createBinding as create$1, createExpression as create$4 } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport cssManager from '../core/css-manager.js';\n\n// expose some internal stuff that might be used from external tools\nconst __ = {\n  cssManager,\n  DOMBindings: {\n    template: create,\n    createBinding: create$1,\n    createExpression: create$4,\n    bindingTypes,\n    expressionTypes,\n  },\n  globals: {\n    PROPS_KEY,\n    STATE_KEY,\n    IS_COMPONENT_UPDATING,\n    ATTRIBUTES_KEY_SYMBOL,\n    COMPONENTS_IMPLEMENTATION_MAP,\n    PLUGINS_SET,\n    DOM_COMPONENT_INSTANCE_PROPERTY,\n    PARENT_KEY_SYMBOL,\n  },\n};\n\nexport { __ };\n","import { __, component } from 'riot';\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (scope || document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nconst { cssManager } = __;\nconst { DOM_COMPONENT_INSTANCE_PROPERTY } = __.globals;\n\nfunction reload(componentAPI) {\n  const { name } = componentAPI;\n\n  if (!name) {\n    console.warn('Anonymous components can not be reloaded'); // eslint-disable-line\n    return []\n  }\n\n  return $(`${name}, [is=${name}]`).map((el) => {\n    const oldTag = el[DOM_COMPONENT_INSTANCE_PROPERTY];\n\n    // early return in case there is no riot instance found\n    if (!oldTag) return\n\n    // remove the tag template from the DOM\n    oldTag.unmount(true);\n    // delete the old css from the css manager\n    cssManager.remove(name);\n\n    // create the new tag\n    const newTag = component(componentAPI)(el, oldTag.props);\n    newTag.update(oldTag.state);\n\n    return newTag\n  })\n}\n\nexport { reload as default };\n","/* Riot v9.4.4, @license MIT */\nimport compose from '../dependencies/cumpa/index.js';\nimport { createComponentFromWrapper } from '../core/create-component-from-wrapper.js';\n\n/**\n * Helper method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\nfunction component(implementation) {\n  return (el, props, { slots, attributes, parentScope } = {}) =>\n    compose(\n      (c) => c.mount(el, parentScope),\n      (c) => c({ props, slots, attributes }),\n      createComponentFromWrapper,\n    )(implementation)\n}\n\nexport { component };\n","/* Riot WIP, @license MIT */\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\nfunction compose(...fns) {\n  return fns.reduce((f, g) => (...args) => f(g(...args)))\n}\n\nexport { compose as default };\n","/* Riot WIP, @license MIT */\nimport { isFunction } from './checks.js';\n\n// does simply nothing\nfunction noop() {\n  return this\n}\n\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\nfunction autobindMethods(source, methods) {\n  methods.forEach((method) => {\n    source[method] = source[method].bind(source);\n  });\n\n  return source\n}\n\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\nfunction callOrAssign(source) {\n  return isFunction(source)\n    ? source.prototype && source.prototype.constructor\n      ? new source()\n      : source()\n    : source\n}\n\nexport { autobindMethods, callOrAssign, noop };\n","/* Riot v9.4.4, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { removeChild, cleanNode } from '../dependencies/@riotjs/util/dom.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\n// Components without template use a mocked template interface with some basic functionalities to\n// guarantee consistent rendering behaviour see https://github.com/riot/riot/issues/2984\nconst MOCKED_TEMPLATE_INTERFACE = {\n  [MOUNT_METHOD_KEY](el) {\n    this.el = el;\n  },\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY](_, __, mustRemoveRoot = false) {\n    if (mustRemoveRoot) removeChild(this.el);\n    else if (!mustRemoveRoot) cleanNode(this.el);\n  },\n  clone() {\n    return { ...this }\n  },\n  createDOM: noop,\n};\n\nexport { MOCKED_TEMPLATE_INTERFACE };\n","/* Riot v9.4.4, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop,\n});\n\nexport { PURE_COMPONENT_API };\n","/* Riot v9.4.4, @license MIT */\nimport { DOM_COMPONENT_INSTANCE_PROPERTY } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\nconst bindDOMNodeToComponentInstance = (node, component) =>\n  (node[DOM_COMPONENT_INSTANCE_PROPERTY] = component);\n\nexport { bindDOMNodeToComponentInstance };\n","/* Riot v9.4.4, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce(\n    (acc, method) => {\n      acc[method] = mapFunction(method);\n\n      return acc\n    },\n    {},\n  )\n}\n\nexport { createCoreAPIMethods };\n","/* Riot v9.4.4, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\n\nconst COMPONENT_DOM_SELECTORS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0]\n  },\n  $$(selector) {\n    return $(selector, this.root)\n  },\n});\n\nexport { COMPONENT_DOM_SELECTORS };\n","/* Riot v9.4.4, @license MIT */\nimport { SHOULD_UPDATE_KEY, ON_BEFORE_MOUNT_KEY, ON_MOUNTED_KEY, ON_BEFORE_UPDATE_KEY, ON_UPDATED_KEY, ON_BEFORE_UNMOUNT_KEY, ON_UNMOUNTED_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop,\n});\n\nexport { COMPONENT_LIFECYCLE_METHODS };\n","/* Riot WIP, @license MIT */\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn, ...acc) {\n  return (...args) => {\n    args = [...acc, ...args];\n\n    return args.length < fn.length ?\n      curry(fn, ...args) :\n      fn(...args)\n  }\n}\n\nexport { curry as default };\n","/* Riot v9.4.4, @license MIT */\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\n\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state given to the `update` call\n * @returns {Object} new object state\n */\nfunction computeComponentState(oldState, newState) {\n  return {\n    ...oldState,\n    ...callOrAssign(newState),\n  }\n}\n\nexport { computeComponentState };\n","/* Riot v9.4.4, @license MIT */\nimport { DOMattributesToObject } from '../dependencies/@riotjs/util/dom.js';\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\n\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\nfunction computeInitialProps(element, initialProps = {}) {\n  return {\n    ...DOMattributesToObject(element),\n    ...callOrAssign(initialProps),\n  }\n}\n\nexport { computeInitialProps };\n","/* Riot v9.4.4, @license MIT */\nimport '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport { memoize } from '../dependencies/@riotjs/util/misc.js';\n\n/**\n * Get the computed attribute names from the template instance\n * Since these attributes will not change we memoize the result of this computation\n * @param {TemplateChunk} template - template instance\n * @return {[]} list of attribute names that will be computed by the template expressions\n */\nconst getRootComputedAttributeNames = memoize((template) => {\n  const firstBinding = template?.bindingsData?.[0];\n\n  // if the first binding has the selector attribute it means that it doesn't belong to the root node\n  if (firstBinding?.selector) return []\n\n  return (\n    firstBinding?.expressions?.reduce(\n      (acc, { name, type }) =>\n        type === expressionTypes.ATTRIBUTE ? acc.concat([name]) : acc,\n      [],\n    ) ?? []\n  )\n});\n\nexport { getRootComputedAttributeNames };\n","/* Riot v9.4.4, @license MIT */\nimport { isFunction, isObject } from '../dependencies/@riotjs/util/checks.js';\nimport { IS_PURE_SYMBOL, PARENT_KEY_SYMBOL, ATTRIBUTES_KEY_SYMBOL, PROPS_KEY, STATE_KEY, TEMPLATE_KEY_SYMBOL, ROOT_KEY, SLOTS_KEY, ON_BEFORE_MOUNT_KEY, ON_MOUNTED_KEY, SHOULD_UPDATE_KEY, ON_BEFORE_UPDATE_KEY, IS_COMPONENT_UPDATING, ON_UPDATED_KEY, ON_BEFORE_UNMOUNT_KEY, ON_UNMOUNTED_KEY, IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { DOMattributesToObject } from '../dependencies/@riotjs/util/dom.js';\nimport { autobindMethods } from '../dependencies/@riotjs/util/functions.js';\nimport { evaluateAttributeExpressions } from '../dependencies/@riotjs/util/misc.js';\nimport { defineProperties, defineProperty, pick } from '../dependencies/@riotjs/util/objects.js';\nimport { addCssHook } from './add-css-hook.js';\nimport { bindDOMNodeToComponentInstance } from './bind-dom-node-to-component-instance.js';\nimport { computeComponentState } from './compute-component-state.js';\nimport { computeInitialProps } from './compute-initial-props.js';\nimport { createAttributeBindings } from './create-attribute-bindings.js';\nimport { runPlugins } from './run-plugins.js';\nimport { getRootComputedAttributeNames } from '../utils/get-root-computed-attribute-names.js';\n\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\nfunction manageComponentLifecycle(\n  component,\n  { slots, attributes, props },\n) {\n  return autobindMethods(\n    runPlugins(\n      defineProperties(\n        isObject(component) ? Object.create(component) : component,\n        {\n          mount(element, state = {}, parentScope) {\n            // any element mounted passing through this function can't be a pure component\n            defineProperty(element, IS_PURE_SYMBOL, false);\n            this[PARENT_KEY_SYMBOL] = parentScope;\n            this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(\n              element,\n              attributes,\n            ).mount(parentScope);\n\n            defineProperty(\n              this,\n              PROPS_KEY,\n              Object.freeze({\n                ...computeInitialProps(element, props),\n                ...evaluateAttributeExpressions(\n                  this[ATTRIBUTES_KEY_SYMBOL].expressions,\n                ),\n              }),\n            );\n\n            this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n            this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone();\n\n            // link this object to the DOM node\n            bindDOMNodeToComponentInstance(element, this);\n            // add eventually the 'is' attribute\n            component.name && addCssHook(element, component.name);\n\n            // define the root element\n            defineProperty(this, ROOT_KEY, element);\n            // define the slots array\n            defineProperty(this, SLOTS_KEY, slots);\n\n            // before mount lifecycle event\n            this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            // mount the template\n            this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n            this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            return this\n          },\n          update(state = {}, parentScope) {\n            if (parentScope) {\n              this[PARENT_KEY_SYMBOL] = parentScope;\n              this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n            }\n\n            // get the attribute names that don't belong to the the props object\n            // this will avoid recursive props rendering https://github.com/riot/riot/issues/2994\n            const computedAttributeNames = getRootComputedAttributeNames(\n              this[TEMPLATE_KEY_SYMBOL],\n            );\n            // filter out the computed attributes from the root node\n            const staticRootAttributes = Array.from(\n              this[ROOT_KEY].attributes,\n            ).filter(({ name }) => !computedAttributeNames.includes(name));\n\n            // evaluate the value of the static dom attributes\n            const domNodeAttributes = DOMattributesToObject({\n              attributes: staticRootAttributes,\n            });\n\n            // Avoid adding the riot \"is\" directives to the component props\n            // eslint-disable-next-line no-unused-vars\n            const { [IS_DIRECTIVE]: _, ...newProps } = {\n              ...domNodeAttributes,\n              ...evaluateAttributeExpressions(\n                this[ATTRIBUTES_KEY_SYMBOL].expressions,\n              ),\n            };\n            if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false)\n              return\n\n            defineProperty(\n              this,\n              PROPS_KEY,\n              Object.freeze({\n                // only root components will merge their initial props with the new ones\n                // children components will just get them overridden see also https://github.com/riot/riot/issues/2978\n                ...(parentScope\n                  ? pick(this[PROPS_KEY], computedAttributeNames)\n                  : this[PROPS_KEY]),\n                ...newProps,\n              }),\n            );\n\n            this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n\n            this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            // avoiding recursive updates\n            // see also https://github.com/riot/riot/issues/2895\n            if (!this[IS_COMPONENT_UPDATING]) {\n              this[IS_COMPONENT_UPDATING] = true;\n              this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n            }\n\n            this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            this[IS_COMPONENT_UPDATING] = false;\n\n            return this\n          },\n          unmount(preserveRoot) {\n            this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            this[ATTRIBUTES_KEY_SYMBOL].unmount();\n            // if the preserveRoot is null the template html will be left untouched\n            // in that case the DOM cleanup will happen differently from a parent node\n            this[TEMPLATE_KEY_SYMBOL].unmount(\n              this,\n              this[PARENT_KEY_SYMBOL],\n              preserveRoot === null ? null : !preserveRoot,\n            );\n            this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            return this\n          },\n        },\n      ),\n    ),\n    Object.keys(component).filter((prop) => isFunction(component[prop])),\n  )\n}\n\nexport { manageComponentLifecycle };\n","/* Riot v9.4.4, @license MIT */\nimport { PLUGINS_SET } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component)\n}\n\nexport { runPlugins };\n","/* Riot v9.4.4, @license MIT */\nimport { createCoreAPIMethods } from './create-core-api-methods.js';\nimport { createExpression as create$4 } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\n\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\nfunction createAttributeBindings(node, attributes = []) {\n  const expressions = attributes.map((a) => create$4(node, a));\n  const binding = {};\n\n  return Object.assign(binding, {\n    expressions,\n    ...createCoreAPIMethods((method) => (scope) => {\n      expressions.forEach((e) => e[method](scope));\n\n      return binding\n    }),\n  })\n}\n\nexport { createAttributeBindings };\n","/* Riot v9.4.4, @license MIT */\nimport { IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { getName } from '../utils/dom.js';\nimport { set } from '../dependencies/bianco.attr/index.next.js';\n\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n\nexport { addCssHook };\n","/* Riot v9.4.4, @license MIT */\nimport { SLOTS_KEY, ROOT_KEY, PROPS_KEY, STATE_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { defineProperties, defineDefaults } from '../dependencies/@riotjs/util/objects.js';\nimport { COMPONENT_DOM_SELECTORS } from './component-dom-selectors.js';\nimport { COMPONENT_LIFECYCLE_METHODS } from './component-lifecycle-methods.js';\nimport cssManager from './css-manager.js';\nimport curry from '../dependencies/curri/index.js';\nimport { manageComponentLifecycle } from './manage-component-lifecycle.js';\n\n/**\n * Component definition function\n * @param   {Object} implementation - the component implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\nfunction instantiateComponent({ css, template, componentAPI, name }) {\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n\n  return curry(manageComponentLifecycle)(\n    defineProperties(\n      // set the component defaults without overriding the original component API\n      defineDefaults(componentAPI, {\n        ...COMPONENT_LIFECYCLE_METHODS,\n        [PROPS_KEY]: {},\n        [STATE_KEY]: {},\n      }),\n      {\n        // defined during the component creation\n        [SLOTS_KEY]: null,\n        [ROOT_KEY]: null,\n        // these properties should not be overriden\n        ...COMPONENT_DOM_SELECTORS,\n        name,\n        css,\n        template,\n      },\n    ),\n  )\n}\n\nexport { instantiateComponent };\n","/* Riot v9.4.4, @license MIT */\nimport { IS_PURE_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { camelToDashCase } from '../dependencies/@riotjs/util/strings.js';\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\nimport { memoize } from '../dependencies/@riotjs/util/misc.js';\nimport { MOCKED_TEMPLATE_INTERFACE } from './mocked-template-interface.js';\nimport { componentTemplateFactory } from './component-template-factory.js';\nimport { createPureComponent } from './create-pure-component.js';\nimport { instantiateComponent } from './instantiate-component.js';\n\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\nfunction createChildrenComponentsObject(components = {}) {\n  return Object.entries(callOrAssign(components)).reduce(\n    (acc, [key, value]) => {\n      acc[camelToDashCase(key)] = createComponentFromWrapper(value);\n      return acc\n    },\n    {},\n  )\n}\n\n/**\n * Create the getter function to render the child components\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {Function} function returning the component factory function\n */\nconst createChildComponentGetter = (componentWrapper) => {\n  const childrenComponents = createChildrenComponentsObject(\n    componentWrapper.exports ? componentWrapper.exports.components : {},\n  );\n\n  return (name) => {\n    // improve support for recursive components\n    if (name === componentWrapper.name)\n      return memoizedCreateComponentFromWrapper(componentWrapper)\n    // return the registered components\n    return childrenComponents[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name)\n  }\n};\n\n/**\n * Performance optimization for the recursive components\n * @param  {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {Object} component like interface\n */\nconst memoizedCreateComponentFromWrapper = memoize(createComponentFromWrapper);\n\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @param   {string} componentWrapper.css - component css\n * @param   {Function} componentWrapper.template - function that will return the dom-bindings template function\n * @param   {Object} componentWrapper.exports - component interface\n * @param   {string} componentWrapper.name - component name\n * @returns {Object} component like interface\n */\nfunction createComponentFromWrapper(componentWrapper) {\n  const { css, template, exports, name } = componentWrapper;\n  const templateFn = template\n    ? componentTemplateFactory(\n        template,\n        componentWrapper,\n        createChildComponentGetter(componentWrapper),\n      )\n    : MOCKED_TEMPLATE_INTERFACE;\n\n  return ({ slots, attributes, props }) => {\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL])\n      return createPureComponent(exports, {\n        slots,\n        attributes,\n        props,\n        css,\n        template,\n      })\n\n    const componentAPI = callOrAssign(exports) || {};\n\n    const component = instantiateComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name,\n    })({ slots, attributes, props });\n\n    // notice that for the components created via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope)\n      },\n      update(parentScope, state) {\n        return component.update(state, parentScope)\n      },\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot)\n      },\n    }\n  }\n}\n\nexport { createComponentFromWrapper };\n","/* Riot v9.4.4, @license MIT */\nimport { template as create } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport bindingTypes from '../dependencies/@riotjs/util/binding-types.js';\n\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @param   {Function} getChildComponent - getter function to return the children components\n * @returns {TemplateChunk} template chunk object\n */\nfunction componentTemplateFactory(\n  template,\n  componentWrapper,\n  getChildComponent,\n) {\n  return template(\n    create,\n    expressionTypes,\n    bindingTypes,\n    getChildComponent,\n  )\n}\n\nexport { componentTemplateFactory };\n","/* Riot v9.4.4, @license MIT */\nimport { MOUNT_METHOD_KEY, IS_PURE_SYMBOL } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { defineDefaults, defineProperty } from '../dependencies/@riotjs/util/objects.js';\nimport { PURE_COMPONENT_API } from './pure-component-api.js';\nimport { bindDOMNodeToComponentInstance } from './bind-dom-node-to-component-instance.js';\nimport { createCoreAPIMethods } from './create-core-api-methods.js';\n\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\nfunction createPureComponent(\n  pureFactoryFunction,\n  { slots, attributes, props, css, template },\n) {\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n\n  const component = defineDefaults(\n    pureFactoryFunction({ slots, attributes, props }),\n    PURE_COMPONENT_API,\n  );\n\n  return createCoreAPIMethods((method) => (...args) => {\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [element] = args;\n      // mark this node as pure element\n      defineProperty(element, IS_PURE_SYMBOL, true);\n      bindDOMNodeToComponentInstance(element, component);\n    }\n\n    component[method](...args);\n\n    return component\n  })\n}\n\nexport { createPureComponent };\n","/* Riot v9.4.4, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\nimport { set } from '../dependencies/bianco.attr/index.next.js';\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]';\n\n// memoized curried function\nconst getStyleNode = ((style) => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style\n\n    // create a new style element or use an existing one\n    // and cache it internally\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n\n    /* istanbul ignore next */\n    if (!style.parentNode) document.head.appendChild(style);\n\n    return style\n  }\n})();\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nconst cssManager = {\n  CSS_BY_NAME,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this\n  },\n};\n\nexport { CSS_BY_NAME, STYLE_NODE_SELECTOR, cssManager as default };\n","/* Riot WIP, @license MIT */\nimport { removeChild, cleanNode, clearChildren, insertBefore, moveChildren, replaceChild } from '../../util/dom.js';\nimport { IS_PURE_SYMBOL, PARENT_KEY_SYMBOL } from '../../util/constants.js';\nimport { SIMPLE, IF, EACH, TAG, SLOT } from '../../util/binding-types.js';\nexport { default as bindingTypes } from '../../util/binding-types.js';\nimport { TEXT, EVENT, ATTRIBUTE, VALUE } from '../../util/expression-types.js';\nexport { default as expressionTypes } from '../../util/expression-types.js';\nimport { defineProperty } from '../../util/objects.js';\nimport { isTemplate, isSvg, isBoolean, isObject, isFunction, isNil } from '../../util/checks.js';\nimport { panic, memoize, evaluateAttributeExpressions } from '../../util/misc.js';\n\nconst HEAD_SYMBOL = Symbol();\nconst TAIL_SYMBOL = Symbol();\nconst REF_ATTRIBUTE = 'ref';\n\n/**\n * Create the <template> fragments text nodes\n * @return {Object} {{head: Text, tail: Text}}\n */\nfunction createHeadTailPlaceholders() {\n  const head = document.createTextNode('');\n  const tail = document.createTextNode('');\n\n  head[HEAD_SYMBOL] = true;\n  tail[TAIL_SYMBOL] = true;\n\n  return { head, tail }\n}\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  const { head, tail } = createHeadTailPlaceholders();\n\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    head,\n    tail,\n    children: [head, ...Array.from(fragment.childNodes), tail],\n  }\n}\n\n/* c8 ignore start */\n/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n// fork of https://github.com/WebReflection/udomdiff version 1.1.0\n// due to https://github.com/WebReflection/udomdiff/pull/2\n/* eslint-disable */\n\n/**\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nconst udomdiff = (a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node =\n        bEnd < bLength\n          ? bStart\n            ? get(b[bStart - 1], -0).nextSibling\n            : get(b[bEnd - bStart], 0)\n          : before;\n      while (bStart < bEnd) insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart])) removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);\n      insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === index + sequence)\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > index - bStart) {\n            const node = get(a[aStart], 0);\n            while (bStart < index) insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b\n};\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\n\nconst EachBinding = {\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const { placeholder, nodes, childrenMap } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n\n    // prepare the diffing\n    const { newChildrenMap, batches, futureNodes } = createPatch(\n      items,\n      scope,\n      parentScope,\n      this,\n    );\n\n    // patch the DOM only if there are new nodes\n    udomdiff(\n      nodes,\n      futureNodes,\n      patch(Array.from(childrenMap.values()), parentScope),\n      placeholder,\n    );\n\n    // trigger the mounts and the updates\n    batches.forEach((fn) => fn());\n\n    // update the children map\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n\n    return this\n  },\n};\n\n/**\n * Patch the DOM while diffing\n * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      // get the last element added to the childrenMap saved previously\n      const element = redundant[redundant.length - 1];\n\n      if (element) {\n        // get the nodes and the template in stored in the last child of the childrenMap\n        const { template, nodes, context } = element;\n        // remove the last node (notice <template> tags might have more children nodes)\n        nodes.pop();\n\n        // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n        if (!nodes.length) {\n          // we have cleared all the children nodes and we can unmount this template\n          redundant.pop();\n          template.unmount(context, parentScope, null);\n        }\n      }\n    }\n\n    return item\n  }\n}\n\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\nfunction mustFilterItem(condition, context) {\n  return condition ? !condition(context) : false\n}\n\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {Object} options - options\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\nfunction extendScope(scope, { itemName, indexName, index, item }) {\n  defineProperty(scope, itemName, item);\n  if (indexName) defineProperty(scope, indexName, index);\n\n  return scope\n}\n\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag,\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item,\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n    const nodes = [];\n\n    if (mustFilterItem(condition, context)) {\n      return\n    }\n\n    const mustMount = !oldItem;\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = componentTemplate.el || root.cloneNode();\n    const meta =\n      isTemplateTag && mustMount\n        ? createTemplateMeta(componentTemplate)\n        : componentTemplate.meta;\n\n    if (mustMount) {\n      batches.push(() =>\n        componentTemplate.mount(el, context, parentScope, meta),\n      );\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    }\n\n    // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n    if (isTemplateTag) {\n      nodes.push(...meta.children);\n    } else {\n      nodes.push(el);\n    }\n\n    // delete the old item from the children map\n    childrenMap.delete(key);\n    futureNodes.push(...nodes);\n\n    // update the children map\n    newChildrenMap.set(key, {\n      nodes,\n      template: componentTemplate,\n      context,\n      index,\n    });\n  });\n\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes,\n  }\n}\n\nfunction create$6(\n  node,\n  { evaluate, condition, itemName, indexName, getKey, template },\n) {\n  const placeholder = document.createTextNode('');\n  const root = node.cloneNode();\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...EachBinding,\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder,\n  }\n}\n\n/**\n * Binding responsible for the `if` directive\n */\nconst IfBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n\n      insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break\n      case mustUnmount:\n        this.unmount(scope);\n        break\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n\n    return this\n  },\n};\n\nfunction create$5(node, { evaluate, template }) {\n  const placeholder = document.createTextNode('');\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...IfBinding,\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node),\n  }\n}\n\n/* c8 ignore next */\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(\n  (name) => ElementProto.hasOwnProperty(name), // eslint-disable-line\n);\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\nfunction setAllAttributes(node, attributes) {\n  Object.keys(attributes).forEach((name) =>\n    attributeExpression(node, { name }, attributes[name]),\n  );\n}\n\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n\n  Object.keys(oldAttributes)\n    .filter((name) => !newKeys.includes(name))\n    .forEach((attribute) => node.removeAttribute(attribute));\n}\n\n/**\n * Check whether the attribute value can be rendered\n * @param {*} value - expression value\n * @returns {boolean} true if we can render this attribute value\n */\nfunction canRenderAttribute(value) {\n  return ['string', 'number', 'boolean'].includes(typeof value)\n}\n\n/**\n * Check whether the attribute should be removed\n * @param {*} value - expression value\n * @param   {boolean} isBoolean - flag to handle boolean attributes\n * @returns {boolean} boolean - true if the attribute can be removed}\n */\nfunction shouldRemoveAttribute(value, isBoolean) {\n  // boolean attributes should be removed if the value is falsy\n  if (isBoolean) return !value && value !== 0\n  // otherwise we can try to render it\n  return typeof value === 'undefined' || value === null\n}\n\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {boolean} expression.isBoolean - flag to handle boolean attributes\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\nfunction attributeExpression(\n  node,\n  { name, isBoolean: isBoolean$1 },\n  value,\n  oldValue,\n) {\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    }\n\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return\n  }\n\n  // ref attributes are treated differently so we early return in this case\n  if (name === REF_ATTRIBUTE) {\n    node && node.removeAttribute(node, name);\n    value(node);\n    return\n  }\n\n  // store the attribute on the node to make it compatible with native custom elements\n  if (\n    !isNativeHtmlProperty(name) &&\n    (isBoolean(value) || isObject(value) || isFunction(value))\n  ) {\n    node[name] = value;\n  }\n\n  if (shouldRemoveAttribute(value, isBoolean$1)) {\n    node.removeAttribute(name);\n  } else if (canRenderAttribute(value)) {\n    node.setAttribute(name, normalizeValue(name, value, isBoolean$1));\n  }\n}\n\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @param   {boolean} isBoolean - boolean attributes flag\n * @returns {string} input value as string\n */\nfunction normalizeValue(name, value, isBoolean) {\n  // be sure that expressions like selected={ true } will always be rendered as selected='selected'\n  // fix https://github.com/riot/riot/issues/2975\n  return value === true && isBoolean ? name : value\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = (value) =>\n  Array.isArray(value) ? value : [value, false];\n\n// see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event);\n  },\n};\nconst ListenersWeakMap = new WeakMap();\n\nconst createListener = (node) => {\n  const listener = Object.create(EventListener);\n  ListenersWeakMap.set(node, listener);\n  return listener\n};\n\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\nfunction eventExpression(node, { name }, value) {\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n  const eventListener = ListenersWeakMap.get(node) || createListener(node);\n  const [callback, options] = getCallbackAndOptions(value);\n  const handler = eventListener[normalizedEventName];\n  const mustRemoveEvent = handler && !callback;\n  const mustAddEvent = callback && !handler;\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener);\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options);\n  }\n\n  eventListener[normalizedEventName] = callback;\n}\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value\n}\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {Text} the text node to update\n */\nconst getTextNode = (node, childNodeIndex) => {\n  return node.childNodes[childNodeIndex]\n};\n\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n\n/**\n * This methods handles the input fields value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nconst expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression,\n};\n\nconst Expression = {\n  // Static props\n  // node: null,\n  // value: null,\n\n  // API methods\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope);\n\n    // IO() DOM updates\n    apply(this, this.value);\n\n    return this\n  },\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this\n  },\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    // ref attributes need to be unmounted as well\n    if (this.name === REF_ATTRIBUTE)\n      expressions[ATTRIBUTE](null, this, this.value);\n\n    return this\n  },\n};\n\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\nfunction apply(expression, value) {\n  return expressions[expression.type](\n    expression.node,\n    expression,\n    value,\n    expression.value,\n  )\n}\n\nfunction create$4(node, data) {\n  return {\n    ...Expression,\n    ...data,\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node,\n  }\n}\n\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return {\n      ...acc,\n      [method]: (scope) => {\n        return collection.map((item) => item[method](scope)) && context\n      },\n    }\n  }, {})\n}\n\nfunction create$3(node, { expressions }) {\n  return flattenCollectionMethods(\n    expressions.map((expression) => create$4(node, expression)),\n    ['mount', 'update', 'unmount'],\n  )\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope\n\n  const expressions = attributes.map((attr) => ({\n    ...attr,\n    value: attr.evaluate(scope),\n  }));\n\n  return Object.assign(\n    Object.create(parentScope || null),\n    evaluateAttributeExpressions(expressions),\n  )\n}\n\n// this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\nconst getRealParent = (scope, parentScope) =>\n  scope[PARENT_KEY_SYMBOL] || parentScope;\n\nconst SlotBinding = {\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n  // templateData: null,\n  // template: null,\n\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope)\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots\n      ? scope.slots.find(({ id }) => id === this.name)\n      : false;\n    const { parentNode } = this.node;\n\n    // if the slot did not pass any content, we will use the self slot for optional fallback content (https://github.com/riot/riot/issues/3024)\n    const realParent = templateData ? getRealParent(scope, parentScope) : scope;\n\n    this.templateData = templateData;\n\n    // override the template property if the slot needs to be replaced\n    this.template =\n      (templateData &&\n        create(templateData.html, templateData.bindings).createDOM(\n          parentNode,\n        )) ||\n      // otherwise use the optional template fallback if provided by the compiler see also https://github.com/riot/riot/issues/3014\n      this.template?.clone();\n\n    if (this.template) {\n      cleanNode(this.node);\n      this.template.mount(\n        this.node,\n        this.getTemplateScope(scope, realParent),\n        realParent,\n      );\n      this.template.children = Array.from(this.node.childNodes);\n    }\n\n    moveSlotInnerContent(this.node);\n    removeChild(this.node);\n\n    return this\n  },\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = this.templateData\n        ? getRealParent(scope, parentScope)\n        : scope;\n\n      this.template.update(this.getTemplateScope(scope, realParent), realParent);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(\n        this.getTemplateScope(scope, parentScope),\n        null,\n        mustRemoveRoot,\n      );\n    }\n\n    return this\n  },\n};\n\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLElement} slot - slot node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\nfunction moveSlotInnerContent(slot) {\n  const child = slot && slot.firstChild;\n\n  if (!child) return\n\n  insertBefore(child, slot);\n  moveSlotInnerContent(slot);\n}\n\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} name - slot id\n * @param   {AttributeExpressionData[]} attributes - slot attributes\n * @returns {Object} Slot binding object\n */\nfunction createSlot(node, { name, attributes, template }) {\n  return {\n    ...SlotBinding,\n    attributes,\n    template,\n    node,\n    name,\n  }\n}\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\nfunction getTag(component, slots = [], attributes = []) {\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({ slots, attributes })\n  }\n\n  // otherwise we return a template chunk\n  return create(slotsToMarkup(slots), [\n    ...slotBindings(slots),\n    {\n      // the attributes should be registered as binding\n      // if we fallback to a normal template chunk\n      expressions: attributes.map((attr) => {\n        return {\n          type: ATTRIBUTE,\n          ...attr,\n        }\n      }),\n    },\n  ])\n}\n\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\nfunction slotBindings(slots) {\n  return slots.reduce((acc, { bindings }) => acc.concat(bindings), [])\n}\n\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html\n  }, '')\n}\n\nconst TagBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n\n  mount(scope) {\n    return this.update(scope)\n  },\n  update(scope, parentScope) {\n    const name = this.evaluate(scope);\n\n    // simple update\n    if (name && name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true);\n\n      // mount the new tag\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this\n  },\n};\n\nfunction create$2(\n  node,\n  { evaluate, getComponent, slots, attributes },\n) {\n  return {\n    ...TagBinding,\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent,\n  }\n}\n\nconst bindings = {\n  [IF]: create$5,\n  [SIMPLE]: create$3,\n  [EACH]: create$6,\n  [TAG]: create$2,\n  [SLOT]: createSlot,\n};\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map((e) =>\n    e.type === TEXT\n      ? {\n          ...e,\n          childNodeIndex: e.childNodeIndex + textExpressionsOffset,\n        }\n      : e,\n  )\n}\n\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {TagBindingData} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\nfunction create$1(root, binding, templateTagOffset) {\n  const { selector, type, redundantAttribute, expressions } = binding;\n  // find the node to apply the bindings\n  const node = selector ? root.querySelector(selector) : root;\n\n  // remove eventually additional attributes created only to select this node\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || [];\n\n  // init the binding\n  return (bindings[type] || bindings[SIMPLE])(node, {\n    ...binding,\n    expressions:\n      templateTagOffset && !selector\n        ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset)\n        : bindingExpressions,\n  })\n}\n\n// in this case a simple innerHTML is enough\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content\n}\n\n// for svg nodes we need a bit more work\n/* c8 ignore start */\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(\n    new window.DOMParser().parseFromString(\n      `<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`,\n      'application/xml',\n    ).documentElement,\n    true,\n  );\n\n  return svgNode\n}\n/* c8 ignore end */\n\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\nfunction createDOMTree(root, html) {\n  /* c8 ignore next */\n  if (isSvg(root)) return createSVGTree(html, root)\n\n  return createHTMLTree(html, root)\n}\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break\n    default:\n      el.appendChild(dom);\n  }\n}\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n * @returns {?DocumentFragment} fragment that will be injected into the root node\n */\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html)\n}\n\n/**\n * Get the offset of the <template> tag\n * @param {HTMLElement} parentNode - template tag parent node\n * @param {HTMLElement} el - the template tag we want to render\n * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n */\nfunction getTemplateTagOffset(parentNode, el, meta) {\n  const siblings = Array.from(parentNode.childNodes);\n\n  return Math.max(siblings.indexOf(el), siblings.indexOf(meta.head) + 1, 0)\n}\n\n/**\n * Template Chunk model\n * @type {Object}\n */\nconst TemplateChunk = {\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom =\n      this.dom ||\n      createTemplateDOM(el, this.html) ||\n      document.createDocumentFragment();\n\n    return this\n  },\n\n  // API methods\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta = {}) {\n    if (!el) panic('Please provide DOM node to mount properly your template');\n\n    if (this.el) this.unmount(scope);\n\n    // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n    const { fragment, children, avoidDOMInjection } = meta;\n    // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n    const { parentNode } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag\n      ? getTemplateTagOffset(parentNode, el, meta)\n      : null;\n\n    // create the DOM if it wasn't created before\n    this.createDOM(el);\n\n    // create the DOM of this template cloning the original DOM structure stored in this instance\n    // notice that if a documentFragment was passed (via meta) we will use it instead\n    const cloneNode = fragment || this.dom.cloneNode(true);\n\n    // store root node\n    // notice that for template tags the root note will be the parent tag\n    this.el = isTemplateTag ? parentNode : el;\n\n    // create the children array only for the <template> fragments\n    this.children = isTemplateTag\n      ? children || Array.from(cloneNode.childNodes)\n      : null;\n\n    // inject the DOM into the el only if a fragment is available\n    if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode);\n\n    // create the bindings\n    this.bindings = this.bindingsData.map((binding) =>\n      create$1(this.el, binding, templateTagOffset),\n    );\n    this.bindings.forEach((b) => b.mount(scope, parentScope));\n\n    // store the template meta properties\n    this.meta = meta;\n\n    return this\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach((b) => b.update(scope, parentScope));\n\n    return this\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot = false) {\n    const el = this.el;\n\n    if (!el) {\n      return this\n    }\n\n    this.bindings.forEach((b) => b.unmount(scope, parentScope, mustRemoveRoot));\n\n    switch (true) {\n      // pure components should handle the DOM unmount updates by themselves\n      // for mustRemoveRoot === null don't touch the DOM\n      case el[IS_PURE_SYMBOL] || mustRemoveRoot === null:\n        break\n\n      // if children are declared, clear them\n      // applicable for <template> and <slot/> bindings\n      case Array.isArray(this.children):\n        clearChildren(this.children);\n        break\n\n      // clean the node children only\n      case !mustRemoveRoot:\n        cleanNode(el);\n        break\n\n      // remove the root node only if the mustRemoveRoot is truly\n      case !!mustRemoveRoot:\n        removeChild(el);\n        break\n    }\n\n    this.el = null;\n\n    return this\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return {\n      ...this,\n      meta: {},\n      el: null,\n    }\n  },\n};\n\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {BindingData[]} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\nfunction create(html, bindings = []) {\n  return {\n    ...TemplateChunk,\n    html,\n    bindingsData: bindings,\n  }\n}\n\nexport { create$1 as createBinding, create$4 as createExpression, create as template };\n","/* Riot WIP, @license MIT */\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\n\nconst bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT,\n};\n\nexport { EACH, IF, SIMPLE, SLOT, TAG, bindingTypes as default };\n","/* Riot WIP, @license MIT */\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type\n}\n\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n\n  return !!owner || owner === null\n}\n\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\nfunction isTemplate(el) {\n  return el.tagName.toLowerCase() === 'template'\n}\n\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\nfunction isFunction(value) {\n  return checkType(value, 'function')\n}\n\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\nfunction isBoolean(value) {\n  return checkType(value, 'boolean')\n}\n\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\nfunction isObject(value) {\n  return !isNil(value) && value.constructor === Object\n}\n\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\nfunction isNil(value) {\n  return value === null || value === undefined\n}\n\n/**\n * Detect node js environment\n * @returns {boolean} true if the runtime is node\n */\nfunction isNode() {\n  return typeof globalThis.process !== 'undefined'\n}\n\nexport { checkType, isBoolean, isFunction, isNil, isNode, isObject, isSvg, isTemplate };\n","/* Riot WIP, @license MIT */\n// Riot.js constants that can be used across more modules\n\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n  DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n  PLUGINS_SET = new Set(),\n  IS_DIRECTIVE = 'is',\n  MOUNT_METHOD_KEY = 'mount',\n  UPDATE_METHOD_KEY = 'update',\n  UNMOUNT_METHOD_KEY = 'unmount',\n  SHOULD_UPDATE_KEY = 'shouldUpdate',\n  ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n  ON_MOUNTED_KEY = 'onMounted',\n  ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n  ON_UPDATED_KEY = 'onUpdated',\n  ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n  ON_UNMOUNTED_KEY = 'onUnmounted',\n  PROPS_KEY = 'props',\n  STATE_KEY = 'state',\n  SLOTS_KEY = 'slots',\n  ROOT_KEY = 'root',\n  IS_PURE_SYMBOL = Symbol('pure'),\n  IS_COMPONENT_UPDATING = Symbol('is_updating'),\n  PARENT_KEY_SYMBOL = Symbol('parent'),\n  ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n  TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nexport { ATTRIBUTES_KEY_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP, DOM_COMPONENT_INSTANCE_PROPERTY, IS_COMPONENT_UPDATING, IS_DIRECTIVE, IS_PURE_SYMBOL, MOUNT_METHOD_KEY, ON_BEFORE_MOUNT_KEY, ON_BEFORE_UNMOUNT_KEY, ON_BEFORE_UPDATE_KEY, ON_MOUNTED_KEY, ON_UNMOUNTED_KEY, ON_UPDATED_KEY, PARENT_KEY_SYMBOL, PLUGINS_SET, PROPS_KEY, ROOT_KEY, SHOULD_UPDATE_KEY, SLOTS_KEY, STATE_KEY, TEMPLATE_KEY_SYMBOL, UNMOUNT_METHOD_KEY, UPDATE_METHOD_KEY };\n","/* Riot WIP, @license MIT */\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value;\n    return acc\n  }, {})\n}\n\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n\n// Ignore this helper because it's needed only for svg tags\nfunction moveChildren(source, target) {\n  // eslint-disable-next-line fp/no-loops\n  while (source.firstChild) target.appendChild(source.firstChild);\n}\n\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\nfunction cleanNode(node) {\n  // eslint-disable-next-line fp/no-loops\n  while (node.firstChild) node.removeChild(node.firstChild);\n}\n\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\nfunction clearChildren(children) {\n  // eslint-disable-next-line fp/no-loops,fp/no-let\n  for (let i = 0; i < children.length; i++) removeChild(children[i]);\n}\n\n/**\n * Remove a node\n * @param {HTMLElement}node - node to remove\n * @returns {undefined}\n */\nconst removeChild = (node) => node.remove();\n\n/**\n * Insert before a node\n * @param {HTMLElement} newNode - node to insert\n * @param {HTMLElement} refNode - ref child\n * @returns {undefined}\n */\nconst insertBefore = (newNode, refNode) =>\n  refNode &&\n  refNode.parentNode &&\n  refNode.parentNode.insertBefore(newNode, refNode);\n\n/**\n * Replace a node\n * @param {HTMLElement} newNode - new node to add to the DOM\n * @param {HTMLElement} replaced - node to replace\n * @returns {undefined}\n */\nconst replaceChild = (newNode, replaced) =>\n  replaced &&\n  replaced.parentNode &&\n  replaced.parentNode.replaceChild(newNode, replaced);\n\nexport { DOMattributesToObject, cleanNode, clearChildren, insertBefore, moveChildren, removeChild, replaceChild };\n","/* Riot WIP, @license MIT */\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\n\nconst expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE,\n};\n\nexport { ATTRIBUTE, EVENT, TEXT, VALUE, expressionTypes as default };\n","/* Riot WIP, @license MIT */\nimport { VALUE, ATTRIBUTE } from './expression-types.js';\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @param   { string } cause - optional error cause object\n * @returns { undefined } hoppla... at this point the program should stop working\n */\nfunction panic(message, cause) {\n  throw new Error(message, { cause })\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\nfunction memoize(fn) {\n  const cache = new Map();\n  const cached = (val) => {\n    return cache.has(val)\n      ? cache.get(val)\n      : cache.set(val, fn.call(this, val)) && cache.get(val)\n  };\n  cached.cache = cache;\n  return cached\n}\n\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const { value, type } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return {\n          ...acc,\n          ...value,\n        }\n      // value attribute\n      case type === VALUE:\n        acc.value = attribute.value;\n        break\n      // normal attributes\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc\n  }, {})\n}\n\nexport { evaluateAttributeExpressions, memoize, panic };\n","/* Riot WIP, @license MIT */\nimport { isObject } from './checks.js';\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options = {}) {\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, {\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true,\n    ...options,\n  });\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source\n}\n\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} the original object modified\n */\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach(([key, value]) => {\n    defineProperty(source, key, value, options);\n  });\n\n  return source\n}\n\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach(([key, value]) => {\n    if (!source[key]) source[key] = value;\n  });\n\n  return source\n}\n\n/**\n * Generate a new object picking only the properties from a given array\n * @param {Object} source - target object\n * @param {Array} keys - list of keys that we want to copy over to the new object\n * @return {Object} a new object conaining only the keys that we have picked from the keys array list\n */\nfunction pick(source, keys) {\n  return isObject(source)\n    ? Object.fromEntries(keys.map((key) => [key, source[key]]))\n    : source\n}\n\nexport { defineDefaults, defineProperties, defineProperty, pick };\n","/* Riot WIP, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n}\n\nexport { camelToDashCase, dashToCamelCase };\n","/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\nconst normalize = values => values.length === 1 ? values[0] : values;\n\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)))\n  }))\n}\n\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : { [name]: value };\n  const props = Object.keys(attrs);\n\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els\n}\n\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute')\n}\n\nexport { get, set };\n","/* Riot WIP, @license MIT */\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\nexport { domToArray as default };\n","/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (scope || document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nexport { $ as default };\n","/* Riot v9.4.4, @license MIT */\nimport { IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { get } from '../dependencies/bianco.attr/index.next.js';\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase()\n}\n\nexport { getName };\n","import { register } from \"riot\";\n\nconst basename = (path, extension = \"\") =>\n  path.split(\"/\").reverse()[0].replace(extension, \"\");\nconst globalComponentsContext = import.meta.webpackContext(\n  \"./components/global/\",\n  { recursive: true, regExp: /[a-zA-Z0-9-]+\\.riot/ },\n);\n\nexport default () => {\n  globalComponentsContext.keys().map((path) => {\n    const name = basename(path, \".riot\");\n\n    const component = globalComponentsContext(path);\n\n    register(name, component.default || component);\n\n    return {\n      name,\n      component,\n    };\n  });\n};\n","/* Riot v9.4.4, @license MIT */\nimport { COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { createComponentFromWrapper } from '../core/create-component-from-wrapper.js';\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\nfunction register(name, { css, template, exports }) {\n  if (COMPONENTS_IMPLEMENTATION_MAP.has(name))\n    panic(`The component \"${name}\" was already registered`);\n\n  COMPONENTS_IMPLEMENTATION_MAP.set(\n    name,\n    createComponentFromWrapper({ name, css, template, exports }),\n  );\n\n  return COMPONENTS_IMPLEMENTATION_MAP\n}\n\nexport { register };\n","/* Riot v9.4.4, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\nimport { mountComponent } from '../core/mount-component.js';\n\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of riot components\n */\nfunction mount(selector, initialProps, name) {\n  return $(selector).map((element) =>\n    mountComponent(element, initialProps, name),\n  )\n}\n\nexport { mount };\n","import \"./style.css\";\nimport \"@riotjs/hot-reload\";\nimport { mount } from \"riot\";\nimport registerGlobalComponents from \"./register-global-components.js\";\n\n// register\nregisterGlobalComponents();\n\n// mount all the global components found in this page\nmount(\"[data-riot-component]\");\n","/* Riot v9.4.4, @license MIT */\nimport { COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { getName } from '../utils/dom.js';\n\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @param   {Array} slots - component slots\n * @returns {Object} a new component instance bound to a DOM node\n */\nfunction mountComponent(element, initialProps, componentName, slots) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name))\n    panic(`The component named \"${name}\" was never registered`);\n\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps,\n    slots,\n  });\n\n  return component.mount(element)\n}\n\nexport { mountComponent };\n"],"names":["props","message","components","User","state","name","showUser","toggleUser","this","update","normalizeUrl","srcByModuleId","Object","create","noDocument","document","forEach","Array","prototype","noop","updateCss","el","url","href","split","isUrlRequest","isLoaded","indexOf","visited","newEl","cloneNode","addEventListener","parentNode","removeChild","concat","Date","now","nextSibling","insertBefore","appendChild","reloadAll","elements","querySelectorAll","call","test","module","exports","moduleId","options","console","log","fn","timeout","getScriptSrc","src","currentScript","scripts","getElementsByTagName","lastScriptTag","length","fileMap","splitResult","filename","map","mapRule","reg","RegExp","replace","getCurrentScriptUrl","reloaded","loaded","ret","some","getReloadUrl","reloadStyle","locals","join","self","args","arguments","clearTimeout","setTimeout","apply","urlString","trim","protocol","host","toLowerCase","reduce","accumulator","item","pop","push","localsJsonString","cssReload","undefined","id","hot","data","value","invalidate","accept","dispose","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","__","cssManager","DOMBindings","template","createBinding","createExpression","bindingTypes","expressionTypes","globals","PROPS_KEY","STATE_KEY","IS_COMPONENT_UPDATING","ATTRIBUTES_KEY_SYMBOL","COMPONENTS_IMPLEMENTATION_MAP","PLUGINS_SET","DOM_COMPONENT_INSTANCE_PROPERTY","PARENT_KEY_SYMBOL","reload","componentAPI","selector","els","scope","isArray","toString","from","oldTag","unmount","remove","newTag","implementation","slots","attributes","parentScope","fns","f","g","compose","c","mount","warn","callOrAssign","source","constructor","MOCKED_TEMPLATE_INTERFACE","_","mustRemoveRoot","clone","createDOM","PURE_COMPONENT_API","freeze","bindDOMNodeToComponentInstance","node","component","createCoreAPIMethods","mapFunction","acc","method","COMPONENT_DOM_SELECTORS","$","root","$$","COMPONENT_LIFECYCLE_METHODS","curry","computeComponentState","oldState","newState","computeInitialProps","element","initialProps","getRootComputedAttributeNames","firstBinding","bindingsData","expressions","type","manageComponentLifecycle","runPlugins","a","binding","assign","createAttributeBindings","addCssHook","computedAttributeNames","staticRootAttributes","filter","includes","domNodeAttributes","newProps","preserveRoot","prop","bind","instantiateComponent","css","add","createChildComponentGetter","componentWrapper","childrenComponents","entries","key","createComponentFromWrapper","createChildrenComponentsObject","memoizedCreateComponentFromWrapper","get","templateFn","getChildComponent","componentTemplateFactory","pureFactoryFunction","createPureComponent","CSS_BY_NAME","Map","style","has","set","inject","createElement","head","innerHTML","values","delete","HEAD_SYMBOL","Symbol","TAIL_SYMBOL","UNMOUNT_SCOPE","EachBinding","nodes","placeholder","childrenMap","collection","evaluate","items","newChildrenMap","batches","futureNodes","condition","itemName","getKey","indexName","isTemplateTag","index","context","extendScope","oldItem","mustFilterItem","mustMount","componentTemplate","meta","fragment","dom","tail","createTextNode","createHeadTailPlaceholders","avoidDOMInjection","children","childNodes","createTemplateMeta","createPatch","b","before","bLength","aEnd","bEnd","aStart","bStart","i","sequence","udomdiff","redundant","info","patch","IfBinding","mustUnmount","pristine","ElementProto","Element","isNativeHtmlProperty","hasOwnProperty","RE_EVENTS_PREFIX","EventListener","handleEvent","event","ListenersWeakMap","WeakMap","normalizeStringValue","getTextNode","childNodeIndex","attributeExpression","isBoolean","isBoolean$1","oldValue","removeAttribute","shouldRemoveAttribute","canRenderAttribute","setAttribute","normalizeValue","newAttributes","oldAttributes","newKeys","attribute","removeAllAttributes","setAllAttributes","normalizedEventName","eventListener","listener","createListener","callback","getCallbackAndOptions","handler","mustAddEvent","removeEventListener","expression","Expression","create$4","getRealParent","SlotBinding","getTemplateScope","attr","extendParentScope","templateData","find","realParent","html","bindings","moveSlotInnerContent","slot","child","firstChild","slotBindings","TagBinding","tag","slotsToMarkup","getTag","getComponent","keepRootTag","IF","fixTextExpressionsOffset","textExpressionsOffset","create$1","templateTagOffset","redundantAttribute","querySelector","bindingExpressions","TemplateChunk","container","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createSVGTree","content","createHTMLTree","createDOMTree","createTemplateDOM","createDocumentFragment","siblings","Math","max","getTemplateTagOffset","replaceChild","injectDOM","EACH","SIMPLE","TAG","SLOT","checkType","isSvg","owner","ownerSVGElement","isTemplate","tagName","isFunction","isObject","isNil","Set","IS_DIRECTIVE","MOUNT_METHOD_KEY","UPDATE_METHOD_KEY","UNMOUNT_METHOD_KEY","SHOULD_UPDATE_KEY","ON_BEFORE_MOUNT_KEY","ON_MOUNTED_KEY","ON_BEFORE_UPDATE_KEY","ON_UPDATED_KEY","ON_BEFORE_UNMOUNT_KEY","ON_UNMOUNTED_KEY","SLOTS_KEY","ROOT_KEY","IS_PURE_SYMBOL","TEMPLATE_KEY_SYMBOL","DOMattributesToObject","moveChildren","target","cleanNode","clearChildren","newNode","refNode","replaced","ATTRIBUTE","EVENT","TEXT","VALUE","panic","cause","memoize","cache","cached","val","evaluateAttributeExpressions","defineProperty","enumerable","writable","configurable","defineProperties","properties","defineDefaults","defaults","pick","fromEntries","camelToDashCase","string","dashToCamelCase","toUpperCase","normalize","attrs","names","n","parseNodes","domToArray","getName","globalComponentsContext","path","extension","reverse","basename","register","default","mountComponent"],"sourceRoot":""}